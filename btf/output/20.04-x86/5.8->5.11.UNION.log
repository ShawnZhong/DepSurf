Old Kind.UNION (127): ['fpregs_state', 'sigval', '__sifields', 'rcu_special', 'thread_union', 'key_payload', 'perf_mem_data_src', 'bpf_attr', 'flowi_uli', 'ethtool_flow_union']
New Kind.UNION (139): ['fpregs_state', 'sigval', '__sifields', 'rcu_special', 'thread_union', 'key_payload', 'perf_mem_data_src', 'bpf_attr', 'flowi_uli', 'perf_capabilities']
Added Kind.UNION (23): ['cpuid28_eax', 'cpuid28_ebx', 'cpuid28_ecx', 'uvyh_gr0_gam_gr_config_u', 'uvh_rh10_gam_addr_map_config_u', 'uvh_rh10_gam_mmioh_overlay_config0_u', 'uvh_rh10_gam_mmioh_overlay_config1_u', 'uvh_rh10_gam_mmr_overlay_config_u', 'uvh_rh_gam_addr_map_config_u', 'uvh_rh_gam_alias_2_overlay_config_u']
Removed Kind.UNION (11): ['entry_union', 'uvh_rh_gam_alias210_overlay_config_2_mmr_u', 'uvh_rh_gam_alias210_redirect_config_2_mmr_u', 'uvh_rh_gam_config_mmr_u', 'uvh_rh_gam_gru_overlay_config_mmr_u', 'uvh_rh_gam_mmioh_overlay_config_mmr_u', 'uvh_rh_gam_mmr_overlay_config_mmr_u', 'uv1h_lb_target_physical_apic_id_mask_u', 'uv3h_gr0_gam_gr_config_u', 'bau_msg_header']
Common Kind.UNION (116): ['fpregs_state', 'sigval', '__sifields', 'rcu_special', 'thread_union', 'key_payload', 'perf_mem_data_src', 'bpf_attr', 'flowi_uli', 'ethtool_flow_union']
Changed Kind.UNION (4): ['bpf_attr', 'uvh_node_id_u', 'fscrypt_iv', 'security_list_options']
Reasons Kind.UNION (4): [('Added fields', 4), ('Removed fields', 1), ('Fields reordered', 1), ('Field type changed', 1)]
bpf_attr
	Added fields:
		link_detach         : {'kind': 'STRUCT', 'name': '(anon)'}
		prog_bind_map       : {'kind': 'STRUCT', 'name': '(anon)'}
uvh_node_id_u
	Added fields:
		sy                  : {'kind': 'STRUCT', 'name': 'uvyh_node_id_s'}
		s5                  : {'kind': 'STRUCT', 'name': 'uv5h_node_id_s'}
	Removed fields:
		s1                  : {'kind': 'STRUCT', 'name': 'uv1h_node_id_s'}
	Fields reordered:
		                     ['v', 's', 's1', 'sx', 's2', 's3', 's4']
		                     ['v', 's', 'sx', 'sy', 's5', 's4', 's3', 's2']
fscrypt_iv
	Added fields:
		dun                 : {'kind': 'ARRAY', 'name': '(anon)', 'nr_elems': 4, 'type': {'kind': 'TYPEDEF', 'name': '__le64'}}
security_list_options
	Added fields:
		kernel_post_load_data: {'kind': 'PTR', 'type': {'kind': 'FUNC_PROTO', 'params': [{'name': '(anon)', 'type': {'kind': 'PTR', 'type': {'kind': 'INT', 'name': 'char'}}}, {'name': '(anon-1)', 'type': {'kind': 'TYPEDEF', 'name': 'loff_t'}}, {'name': '(anon-2)', 'type': {'kind': 'ENUM', 'name': 'kernel_load_data_id', 'size': 4}}, {'name': '(anon-3)', 'type': {'kind': 'PTR', 'type': {'kind': 'INT', 'name': 'char'}}}], 'ret_type': {'kind': 'INT', 'name': 'int'}}}
	Field type changed:
		kernel_load_data    : {'kind': 'PTR', 'type': {'kind': 'FUNC_PROTO', 'params': [{'name': '(anon)', 'type': {'kind': 'ENUM', 'name': 'kernel_load_data_id', 'size': 4}}], 'ret_type': {'kind': 'INT', 'name': 'int'}}}
		                    ->{'kind': 'PTR', 'type': {'kind': 'FUNC_PROTO', 'params': [{'name': '(anon)', 'type': {'kind': 'ENUM', 'name': 'kernel_load_data_id', 'size': 4}}, {'name': '(anon-1)', 'type': {'kind': 'TYPEDEF', 'name': 'bool'}}], 'ret_type': {'kind': 'INT', 'name': 'int'}}}
		kernel_read_file    : {'kind': 'PTR', 'type': {'kind': 'FUNC_PROTO', 'params': [{'name': '(anon)', 'type': {'kind': 'PTR', 'type': {'kind': 'STRUCT', 'name': 'file'}}}, {'name': '(anon-1)', 'type': {'kind': 'ENUM', 'name': 'kernel_read_file_id', 'size': 4}}], 'ret_type': {'kind': 'INT', 'name': 'int'}}}
		                    ->{'kind': 'PTR', 'type': {'kind': 'FUNC_PROTO', 'params': [{'name': '(anon)', 'type': {'kind': 'PTR', 'type': {'kind': 'STRUCT', 'name': 'file'}}}, {'name': '(anon-1)', 'type': {'kind': 'ENUM', 'name': 'kernel_read_file_id', 'size': 4}}, {'name': '(anon-2)', 'type': {'kind': 'TYPEDEF', 'name': 'bool'}}], 'ret_type': {'kind': 'INT', 'name': 'int'}}}
		inet_conn_request   : {'kind': 'PTR', 'type': {'kind': 'FUNC_PROTO', 'params': [{'name': '(anon)', 'type': {'kind': 'PTR', 'type': {'kind': 'STRUCT', 'name': 'sock'}}}, {'name': '(anon-1)', 'type': {'kind': 'PTR', 'type': {'kind': 'STRUCT', 'name': 'sk_buff'}}}, {'name': '(anon-2)', 'type': {'kind': 'PTR', 'type': {'kind': 'STRUCT', 'name': 'request_sock'}}}], 'ret_type': {'kind': 'INT', 'name': 'int'}}}
		                    ->{'kind': 'PTR', 'type': {'kind': 'FUNC_PROTO', 'params': [{'name': '(anon)', 'type': {'kind': 'PTR', 'type': {'kind': 'CONST', 'name': '(anon)', 'type': {'kind': 'STRUCT', 'name': 'sock'}}}}, {'name': '(anon-1)', 'type': {'kind': 'PTR', 'type': {'kind': 'STRUCT', 'name': 'sk_buff'}}}, {'name': '(anon-2)', 'type': {'kind': 'PTR', 'type': {'kind': 'STRUCT', 'name': 'request_sock'}}}], 'ret_type': {'kind': 'INT', 'name': 'int'}}}
		req_classify_flow   : {'kind': 'PTR', 'type': {'kind': 'FUNC_PROTO', 'params': [{'name': '(anon)', 'type': {'kind': 'PTR', 'type': {'kind': 'CONST', 'name': '(anon)', 'type': {'kind': 'STRUCT', 'name': 'request_sock'}}}}, {'name': '(anon-1)', 'type': {'kind': 'PTR', 'type': {'kind': 'STRUCT', 'name': 'flowi'}}}], 'ret_type': {'name': 'void', 'kind': 'VOID'}}}
		                    ->{'kind': 'PTR', 'type': {'kind': 'FUNC_PROTO', 'params': [{'name': '(anon)', 'type': {'kind': 'PTR', 'type': {'kind': 'CONST', 'name': '(anon)', 'type': {'kind': 'STRUCT', 'name': 'request_sock'}}}}, {'name': '(anon-1)', 'type': {'kind': 'PTR', 'type': {'kind': 'STRUCT', 'name': 'flowi_common'}}}], 'ret_type': {'name': 'void', 'kind': 'VOID'}}}
		xfrm_state_pol_flow_match: {'kind': 'PTR', 'type': {'kind': 'FUNC_PROTO', 'params': [{'name': '(anon)', 'type': {'kind': 'PTR', 'type': {'kind': 'STRUCT', 'name': 'xfrm_state'}}}, {'name': '(anon-1)', 'type': {'kind': 'PTR', 'type': {'kind': 'STRUCT', 'name': 'xfrm_policy'}}}, {'name': '(anon-2)', 'type': {'kind': 'PTR', 'type': {'kind': 'CONST', 'name': '(anon)', 'type': {'kind': 'STRUCT', 'name': 'flowi'}}}}], 'ret_type': {'kind': 'INT', 'name': 'int'}}}
		                    ->{'kind': 'PTR', 'type': {'kind': 'FUNC_PROTO', 'params': [{'name': '(anon)', 'type': {'kind': 'PTR', 'type': {'kind': 'STRUCT', 'name': 'xfrm_state'}}}, {'name': '(anon-1)', 'type': {'kind': 'PTR', 'type': {'kind': 'STRUCT', 'name': 'xfrm_policy'}}}, {'name': '(anon-2)', 'type': {'kind': 'PTR', 'type': {'kind': 'CONST', 'name': '(anon)', 'type': {'kind': 'STRUCT', 'name': 'flowi_common'}}}}], 'ret_type': {'kind': 'INT', 'name': 'int'}}}
